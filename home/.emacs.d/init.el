;;;; Packages

;; Turn on the built-in package manager, add package repos.
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

;; Bootstrap the better package manager.
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)

;; Enable vim bindings.
(use-package evil
  :ensure t
  :init
    (setq evil-emacs-state-cursor '("red" box))
    (setq evil-split-window-below t)
    (setq evil-vsplit-window-right t)
    (setq evil-want-C-u-scroll t) 
  :config
    (evil-mode 1)

    ;; Escape always quits, like in vim.
    ; (define-key evil-normal-state-map [escape] 'keyboard-quit)
    ; (define-key evil-visual-state-map [escape] 'keyboard-quit)
    ; (define-key minibuffer-local-completion-map [escape] 'minibuffer-keyboard-quit)
    ; (define-key minibuffer-local-isearch-map    [escape] 'minibuffer-keyboard-quit)
    ; (define-key minibuffer-local-map            [escape] 'minibuffer-keyboard-quit)
    ; (define-key minibuffer-local-must-match-map [escape] 'minibuffer-keyboard-quit)
    ; (define-key minibuffer-local-ns-map         [escape] 'minibuffer-keyboard-quit)
    
    ;; Make window switching easier.

    ;; Navigate by visual lines.
    (define-key evil-normal-state-map (kbd "j") 'evil-next-visual-line)
    (define-key evil-normal-state-map (kbd "k") 'evil-previous-visual-line))


;;;; Settings

; Use a separate file for stuff generated by the GUI customizer.
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file)

